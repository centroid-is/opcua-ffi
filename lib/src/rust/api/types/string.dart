// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.6.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `from`, `from`, `from`, `from`, `from`

Future<void> wrapuastring({required UaString a}) =>
    RustLib.instance.api.crateApiTypesStringWrapuastring(a: a);

Future<void> wrapxmlelement({required UaString a}) =>
    RustLib.instance.api.crateApiTypesStringWrapxmlelement(a: a);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UAString>>
abstract class UaString implements RustOpaqueInterface {
  /// Returns true if the string is null or empty, false otherwise
  bool isEmpty();

  /// Test if the string is null.
  bool isNull();

  /// Returns the length of the string in bytes or -1 for null.
  PlatformInt64 len();

  factory UaString(String value) =>
      RustLib.instance.api.crateApiTypesStringUaStringNew(value: value);

  /// Create a null string (not the same as an empty string).
  static UaString null_() =>
      RustLib.instance.api.crateApiTypesStringUaStringNull();

  set value(String? value);

  /// This function is meant for use with NumericRange. It creates a substring from this string
  /// from min up to and inclusive of max. Note that min must have an index within the string
  /// but max is allowed to be beyond the end in which case the remainder of the string is
  /// returned (see docs for NumericRange).
  UaString substring({required BigInt min, required BigInt max});

  String? get value;
}
