// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.5.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored (category: IgnoreBecauseExplicitAttribute): `from`, `new`
// These functions are ignored (category: IgnoreBecauseNotAllowedOwner): `from`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<WrapClient>>
abstract class WrapClient implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<WrapClientBuilder>>
abstract class WrapClientBuilder implements RustOpaqueInterface {
  WrapClientBuilder applicationName({required String applicationName});

  WrapClientBuilder applicationUri({required String applicationUri});

  WrapClientBuilder certificatePath({required String certificatePath});

  WrapClient client();

  WrapClientBuilder createSampleKeypair({required bool createSampleKeypair});

  WrapClientBuilder defaultEndpoint({required String defaultEndpoint});

  WrapClientBuilder endpoint(
      {required String endpointId, required WrapClientEndpoint endpoint});

  WrapClientBuilder endpoints(
      {required List<(String, WrapClientEndpoint)> endpoints});

  static WrapClientBuilder fromConfig({required String path}) =>
      RustLib.instance.api
          .crateApiMinimalWrapClientBuilderFromConfig(path: path);

  bool isValid();

  WrapClientBuilder maxArrayLength({required BigInt maxArrayLength});

  WrapClientBuilder maxByteStringLength({required BigInt maxByteStringLength});

  WrapClientBuilder maxChunkCount({required BigInt maxChunkCount});

  WrapClientBuilder maxChunkSize({required BigInt maxChunkSize});

  WrapClientBuilder maxIncomingChunkSize(
      {required BigInt maxIncomingChunkSize});

  WrapClientBuilder maxMessageSize({required BigInt maxMessageSize});

  WrapClientBuilder maxStringLength({required BigInt maxStringLength});

  factory WrapClientBuilder() =>
      RustLib.instance.api.crateApiMinimalWrapClientBuilderNew();

  WrapClientBuilder pkiDir({required String pkiDir});

  WrapClientBuilder preferredLocales({required List<String> preferredLocales});

  WrapClientBuilder privateKeyPath({required String privateKeyPath});

  WrapClientBuilder productUri({required String productUri});

  WrapClientBuilder sessionRetryInitial(
      {required Duration sessionRetryInitial});

  WrapClientBuilder sessionRetryLimit({required int sessionRetryLimit});

  WrapClientBuilder trustServerCerts({required bool trustServerCerts});

  WrapClientBuilder userToken(
      {required String userTokenId, required WrapClientUserToken userToken});

  WrapClientBuilder verifyServerCerts({required bool verifyServerCerts});
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<WrapClientEndpoint>>
abstract class WrapClientEndpoint implements RustOpaqueInterface {
  factory WrapClientEndpoint({required String url}) =>
      RustLib.instance.api.crateApiMinimalWrapClientEndpointNew(url: url);
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<WrapClientUserToken>>
abstract class WrapClientUserToken implements RustOpaqueInterface {
  bool isValid();

  static WrapClientUserToken userPass(
          {required String user, required String password}) =>
      RustLib.instance.api.crateApiMinimalWrapClientUserTokenUserPass(
          user: user, password: password);

  static WrapClientUserToken x509(
          {required String user,
          required String certPath,
          required String privateKeyPath}) =>
      RustLib.instance.api.crateApiMinimalWrapClientUserTokenX509(
          user: user, certPath: certPath, privateKeyPath: privateKeyPath);
}
